name: Alpha builds

on:
  workflow_dispatch:

jobs:
  build-data:
    name: Generate build data
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.data.outputs.shortsha }}
      build_date: ${{ steps.data.outputs.builddate }}
      upstream: ${{ steps.data.outputs.upstream }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup melon
        run: yarn && yarn setupLink

      - name: Export release data
        id: data
        shell: bash
        run: |
          echo "::set-output name=shortsha::$(git rev-parse --short HEAD)"
          echo "::set-output name=builddate::$(date +"%Y-%m-%d")"
          echo "::set-output name=upstream::$(yarn melon ff-version)"

  linux:
    runs-on: ubuntu-latest
    needs: [build-data]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup git
        run: |
          git config --global user.email "trickypr@users.noreply.github.com"
          git config --global user.name "TrickyPR"

      - name: Install system dependencies
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get update
          sudo apt-get install dos2unix yasm nasm build-essential libgtk2.0-dev libpython3-dev m4 uuid libasound2-dev libcurl4-openssl-dev libdbus-1-dev libdrm-dev libdbus-glib-1-dev libdbus-glib-1-dev libgtk-3-dev libpulse-dev libx11-xcb-dev libxt-dev xvfb lld-10 llvm
          pip install pycairo testresources

          echo "/usr/lib/llvm-10/bin" >> $GITHUB_PATH

      - name: Install WASI SDK
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/wasi-sdk_14.0_amd64.deb
          sudo apt install ./wasi-sdk_14.0_amd64.deb

      - name: Install libclang builtins
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/libclang_rt.builtins-wasm32-wasi-14.0.tar.gz
          sudo tar -xf libclang_rt.builtins-wasm32-wasi-14.0.tar.gz --strip-components=1 -C /usr/lib/llvm-10/lib/clang/10.0.0/lib/

      - name: Disable wasm sandboxing for the sake of my sanity
        run: |
          echo "ac_add_options --without-wasm-sandboxed-libraries" >> mozconfig

      - name: Use 2 threads to reduce memory usage
        run: |
          echo "mk_add_options MOZ_MAKE_FLAGS=\"-j2\"" >> mozconfig

      - name: Use alpha branding
        run: |
          echo "ac_add_options --with-branding=browser/branding/alpha" >> mozconfig

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ needs.build-data.outputs.upstream }}

      - name: Get System Info
        run: |
          llc --version
          ls /usr/lib/llvm-10/bin
          wasm-ld --version
          cargo --version
          ls /opt/wasi-sdk/share/wasi-sysroot

      - name: Log memory usage
        run: |
          ps aux | sort -rnk 4

      - name: Setup melon
        run: yarn && yarn setupLink

      - name: Download firefox source and dependancies
        run: yarn download

      - name: Import
        run: yarn imp

      - name: Bootstrap
        run: |
          cd engine
          ./mach --no-interactive bootstrap --application-choice browser
          cd ..

      - name: Build
        run: yarn build

      - name: Package
        run: yarn melon package

      - name: Rename artifacts
        run: |
          cp ./engine/obj-*/dist/pulse-browser-*.tar.bz2 .
          mv pulse-browser-*.tar.bz2 "pulse-browser.linux.tar.bz2"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pulse-browser.linux.tar.bz2
          path: ./pulse-browser.linux.tar.bz2

  mac:
    runs-on: macos-latest
    needs: [build-data]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup git
        run: |
          git config --global user.email "trickypr@users.noreply.github.com"
          git config --global user.name "TrickyPR"

      - name: Install system dependencies
        run: |
          brew install cairo sccache gnu-tar
          pip3 install pycairo testresources

      - name: Force usage fo gnu-tar
        run: |
          echo 'export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"' >> ~/.bash_profile
          echo 'export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"' >> ~/.zsh
          source ~/.bash_profile

      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ~/Library/Caches/Mozilla.sccache
          key: ${{ runner.os }}-sccache-${{ needs.build-data.outputs.upstream }}

      - name: Use alpha branding
        run: |
          echo "ac_add_options --with-branding=browser/branding/alpha" >> mozconfig

      - name: Get System Info
        run: |
          cargo --version

      - name: Setup melon
        run: yarn && yarn setupLink

      - name: Download firefox source and dependancies
        run: yarn download

      - name: Import
        run: yarn imp

      - name: Bootstrap
        run: |
          cd engine
          ./mach --no-interactive bootstrap --application-choice browser
          cd ..

        # Note: We still need this to generate our .mozconfig
      - name: Gluon build
        continue-on-error: true
        run: yarn build --verbose

      - name: Log
        continue-on-error: true
        run: |
          ls engine
          cat engine/mozconfig
          cat engine/.mozconfig

      - name: Mach build
        run: |
          cd engine
          export MACH_USE_SYSTEM_PYTHON=true
          ./mach build
          cd ..

      - name: Package
        run: gluon package

      - name: Rename artifacts
        run: |
          find ./engine/obj-*/dist/
          cp ./engine/obj-*/dist/*.dmg .
          mv *.dmg "pulse-browser.macos.dmg"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pulse-browser.macos.dmg
          path: ./pulse-browser.macos.dmg

  source:
    runs-on: ubuntu-latest
    needs: [build-data]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup git
        run: |
          git config --global user.email "trickypr@users.noreply.github.com"
          git config --global user.name "TrickyPR"

      - name: Setup melon
        run: yarn && yarn setupLink

      - name: Download firefox source and dependancies
        run: yarn download --verbose

      - name: Import
        run: yarn imp --verbose

      - name: Compress
        run: |
          cd engine
          tar -hczvf ../pulse-browser.source.tar.gz *
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pulse-browser.source.tar.gz
          path: ./pulse-browser.source.tar.gz

  windows-from-source:
    runs-on: windows-latest
    needs: [build-data, source]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Mozillabuild
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          curl -L -o mozilla-build.tar.gz https://github.com/pulse-browser/mozillabuild-cli/releases/download/4.0/mozilla-build.tar.gz
          mkdir -p mozillabuild
          tar -xf mozilla-build.tar.gz -C mozillabuild
          cd mozillabuild
          ./install.sh
          cd ..
          rm -rf mozilla-build.tar.gz mozillabuild/

      - name: Setup git
        run: |
          git config --global user.email "trickypr@users.noreply.github.com"
          git config --global user.name "TrickyPR"

      - name: Setup gluon
        run: |
          yarn
          yarn setupLink:win

          cd gluon
          npm i -g .
          cd ..

      - uses: actions/download-artifact@v2
        name: pulse-browser.source.tar.gz

      - name: Load source
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          mkdir engine
          tar -xf pulse-browser.source.tar.gz/pulse-browser.source.tar.gz -C engine
          rm -rf pulse-browser.source.tar.gz

      - name: Bootstrap
        shell: cmd
        run: |
          cd engine/
          type nul > C:\script
          echo cd /d/a/windows-artifacts/windows-artifacts/mozilla-central >> C:\script
          echo ls >> C:\script
          echo ./mach bootstrap --application-choice browser >> C:\script
          C:\mozilla-build\start-shell.bat "C:\script"

      - name: Build
        run: yarn build --skip-patch-check

      - name: Package
        run: yarn package

      - name: Make artifact available
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          cp engine/obj-*/dist/install/sea/pulse-browser-*.installer.exe .
          mv *.installer.exe pulse-browser.installer.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pulse-browser.windows.installer.exe
          path: ./pulse-browser.installer.exe

  release:
    name: Release
    needs: [build-data, linux, source, mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - name: release-github
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: 'alpha-${{ needs.build-data.outputs.build_date }}'
          prerelease: true
          title: 'Alpha build'
          files: |
            pulse-browser.linux.tar.bz2
            pulse-browser.source.tar.gz
            pulse-browser.macos.dmg
